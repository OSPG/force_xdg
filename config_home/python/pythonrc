#
# Python startup script
# Taken and modified from https://gist.github.com/mgedmin/760273 with permission
#
import os
import sys

# Coloured prompt
try:
	import curses
	curses.setupterm()
	if curses.tigetstr('setaf') and curses.tigetstr('sgr0'):  # curses.can_change_color() requires initscr, idk why
		ps1 = curses.tparm(curses.tigetstr('setaf'), 2).decode('ascii')  # green
		ps2 = curses.tparm(curses.tigetstr('setaf'), 8).decode('ascii')  # purple
	elif curses.tigetstr('setf') and curses.tigetstr('sgr0'):
		ps1 = curses.tparm(curses.tigetstr('setf'), 2).decode('ascii')  # green
		ps2 = curses.tparm(curses.tigetstr('setf'), 8).decode('ascii')  # purple
	else:
		assert False
	reset = curses.tparm(curses.tigetstr('sgr0')).decode('ascii')
except (ImportError, AssertionError):
	if os.getenv('TERM') in ('xterm', 'xterm-256color', 'putty', 'rxvt',
			'screen', 'screen-256color', 'Eterm', 'vt100'):
		ps1 = '\001\033[0;32m\002'
		ps2 = '\001\033[1;32m\002'
		reset = '\001\033[0m\002'
	else:
		ps1 = ps2 = reset = ''
finally:
	try:
		sys.ps1 = ps1 + '>>> ' + reset
		sys.ps2 = ps2 + '... ' + reset
		del curses
		del ps1, ps2, reset
	except NameError:
		pass


try:
	import readline  # noqa: import enables autocompletion
	import rlcompleter
	readline.parse_and_bind("tab: complete")
	del rlcompleter
except ImportError:
	print("Module readline not available.")
else:
	# defaulting to a proper location for the history file
	try:
		from xdg.BaseDirectory import xdg_data_home
	except:
		xdg_data_home = os.getenv("XDG_DATA_HOME") or os.path.join(os.path.expanduser("~"), ".local", "share")

	histfile = os.path.expanduser(os.path.join(xdg_data_home, "python", "history"))
	del xdg_data_home
	try:
		readline.read_history_file(histfile)
	except IOError:
		pass

	def write_history(readline=readline, histfile=histfile):
		try:
			readline.write_history_file(histfile)
		except IOError:
			# root, nfs-mounted home with root_squash -> permission denied
			pass

	import atexit
	atexit.register(write_history)
	del histfile, atexit, write_history


# makes reload(module) easily available
try:
	reload  # python-2
except NameError:
	try:
		# >=python-3.4
		from importlib import reload
	except ImportError:
		# <=python-3.3
		from imp import reload  # noqa

# Cleanup
del sys
del os

# vim: set ft=python noexpandtab tabstop=4 shiftwidth=4 :

